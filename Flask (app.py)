import os
from flask import Flask ,request, redirect, url_for, send_from_directory, render_template
from keras.models import load_model
from werkzeug import secure_filename
import cv2
import numpy as np
import keras
import tensorflow as tf

UPLOAD_FOLDER = os.path.dirname(os.path.abspath(__file__)) + '/uploads/'
ALLOWED_EXTENSIONS = set(['png', 'jpg', 'jpeg', 'gif'])

print(UPLOAD_FOLDER)

app = Flask(__name__)

model = load_model("wheel_model.h5") # 学習したモデルをロードする必要があります
graph = tf.get_default_graph() # おまじない　おまじないと書いてあるものは、kerasのバグにより必要になっているコードです。


def allowed_file(filename):
    return '.' in filename and \
        filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS

@app.route('/', methods=['GET', 'POST'])
def upload():
    if request.method == 'POST':
        file = request.files['file']
        if file and allowed_file(file.filename):
            # Save file
            filename = secure_filename(file.filename)
            file.save(os.path.join(UPLOAD_FOLDER, filename))
            # Predict label
            img = cv2.imread(os.path.join(UPLOAD_FOLDER, filename)) 
            img_resize = cv2.resize(img,(50, 50)) 
            global graph 
            with graph.as_default(): 
                result = model.predict(np.array([(img_resize)]))
                predicted = result.argmax()
                answer = ["BBS_LM","Rays_TE37","Meister_S1_3P"][predicted]
                return render_template('bunta_layout.html', answer=answer)

            
            # return redirect(url_for('uploaded_file', filename=filename))
    name = 'index'
    return render_template("bunta_index.html",name=name)

@app.route('/<filename>')
def uploaded_file(filename):
    return send_from_directory(UPLOAD_FOLDER, filename)

@app.route('/hello')
def hello():
    return render_template("hello.html",tilte='hello')

if __name__ == '__main__':
    app.run(debug=True, port=8000)
